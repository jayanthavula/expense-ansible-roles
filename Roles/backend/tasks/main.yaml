- name: To disable nodejs version
  ansible.builtin.command: dnf module disable nodejs -y

- name: To enable nodejs 20 version
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: To install nodejs and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: installed
  loop:
  - nodejs
  - mysql

- name: Create user
  ansible.builtin.user:
    name: expense

- name: create directory /app
  ansible.builtin.file:
    path: /app
    state: directory

- name: download source code
  ansible.builtin.get_url:
    url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: To install mysql libraries
  ansbile.builtin.pip:
    name: "{{ item }}"
  loop:
  - PyMySQL
  - cryptography

- name: unzip source code in /app
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: true

- name: copy backend service
  ansible.builtin.template: #it will search in template folder
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install npm
  community.general.npm:
    path: /app

- name: import msql data
  community.sql.mysql_db:
    state: import
    name: all
    login_user: "{{ MYSQL_USER }}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: " {{ MYSQL_HOST }}"
    target: /app/schema/backend.sql

- name: Reload Daemon and restart service
  ansible.builtin.systemd_service:
    enabled: yes  
    state: restarted
    daemon_reload: true
    name: backend